name: workflow_01

on:
  workflow_dispatch:
    inputs:
      workflow_02:
        description: 'Workflow 2 which will be triggered'
        required: true
        default: 'workflow_02'
      workflow2_github_account:
        description: 'GitHub Account Owner'
        required: true
        default: 'ashrafalih'
      workflow2_repo_github:
        description: 'repo-name'
        required: true
        default: 'Repo_B'
  push:
    branches:
      - main

jobs:
  build-and-publish:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Repo_A
        uses: actions/checkout@v2
      - name: Set up AWS CLI
        run: |
          mkdir -p ~/.aws
          echo "[default]" > ~/.aws/config
          echo "aws_access_key_id=${{ secrets.AWS_ACCESS_KEY_ID }}" >> ~/.aws/config
          echo "aws_secret_access_key=${{ secrets.AWS_SECRET_ACCESS_KEY }}" >> ~/.aws/config
          echo "region=us-east-1" >> ~/.aws/config

      - name: Build and Publish Docker Image
        env:
          AWS_REGION: us-east-1  
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        run: |
          aws ecr-public get-login-password --region us-east-1 | docker login --username AWS --password-stdin public.ecr.aws/f9x9k0v4
          # docker build -t test-package-mgmt .
          # docker tag test-package-mgmt-160-rc:latest public.ecr.aws/f9x9k0v4/package-mgmt-repo:latest
          # docker tag test-package-mgmt:160-rc public.ecr.aws/f9x9k0v4/package-mgmt-repo:160-rc
          # docker push public.ecr.aws/f9x9k0v4/package-mgmt-repo:latest
          docker build -t test-package-mgmt:160-rc .
          docker tag test-package-mgmt:160-rc public.ecr.aws/f9x9k0v4/package-mgmt-repo:160-rc
          docker push public.ecr.aws/f9x9k0v4/package-mgmt-repo:160-rc
  
  trigger:
    needs: build-and-publish
    runs-on: ubuntu-latest

    steps:
      - name: Set Environment Variables
        run: |
          echo "REPO_OWNER=ashrafalih" >> $GITHUB_ENV
          echo "REPO_NAME=Repo_B" >> $GITHUB_ENV
          echo "EVENT_TYPE=Trigger Workflow" >> $GITHUB_ENV

      - name: Trigger Workflow 2
        run: |
          curl -X POST https://api.github.com/repos/$REPO_OWNER/$REPO_NAME/dispatches \
          -H 'Accept: application/vnd.github.everest-preview+json' \
          -u ${{ secrets.ACTIONS_KEY }} \
          --data "{\"event_type\": \"$EVENT_TYPE\", \"client_payload\": {\"repository\": \"$GITHUB_REPOSITORY\"}}"
        env:
          REPO_OWNER: ${{ env.REPO_OWNER }}
          REPO_NAME: ${{ env.REPO_NAME }}
          EVENT_TYPE: ${{ env.EVENT_TYPE }}

      - uses: actions/checkout@v3
###############################################
# name: workflow_01

# on:
#   workflow_dispatch:
#     inputs:
#       workflow_02:
#         description: 'Workflow 2 which will be triggered'
#         required: true
#         default: 'workflow_02'
#       workflow2_github_account:
#         description: 'GitHub Account Owner'
#         required: true
#         default: 'ashrafalih'
#       workflow2_repo_github:
#         description: 'repo-name'
#         required: true
#         default: 'Repo_B'
#   push:
#     branches:
#       - main

# jobs:
#   build:
#     runs-on: ubuntu-latest

#     steps:
#       - name: Set Environment Variables
#         run: |
#           echo "REPO_OWNER=ashrafalih" >> $GITHUB_ENV
#           echo "REPO_NAME=Repo_B" >> $GITHUB_ENV
#           echo "EVENT_TYPE=Trigger Workflow" >> $GITHUB_ENV

#       - name: Trigger Workflow 2
#         run: |
#           curl -X POST https://api.github.com/repos/$REPO_OWNER/$REPO_NAME/dispatches \
#           -H 'Accept: application/vnd.github.everest-preview+json' \
#           -u ${{ secrets.ACTIONS_KEY }} \
#           --data "{\"event_type\": \"$EVENT_TYPE\", \"client_payload\": {\"repository\": \"$GITHUB_REPOSITORY\"}}"
#         env:
#           REPO_OWNER: ${{ env.REPO_OWNER }}
#           REPO_NAME: ${{ env.REPO_NAME }}
#           EVENT_TYPE: ${{ env.EVENT_TYPE }}

#       - uses: actions/checkout@v3

#################wokring script#############
# name: workflow_01

# on:
#   workflow_dispatch:
#     inputs:
#       workflow_02:
#         description: 'Workflow 2 which will be triggered'
#         required: true
#         default: 'workflow_02'
#       workflow2_github_account:
#         description: 'GitHub Account Owner'
#         required: true
#         default: 'ashrafalih'
#       workflow2_repo_github:
#         description: 'repo-name'
#         required: true
#         default: 'Repo_B'
#   push:
#     branches:
#       - main

# jobs:
#   build:
#     runs-on: ubuntu-latest

#     steps:
#       - name: Set Environment Variables
#         run: |
#           echo "REPO_OWNER=ashrafalih" >> $GITHUB_ENV
#           echo "REPO_NAME=Repo_B" >> $GITHUB_ENV
#           echo "EVENT_TYPE=Trigger Workflow" >> $GITHUB_ENV

#       - name: Trigger Workflow 2
#         run: |
#           curl -X POST https://api.github.com/repos/$REPO_OWNER/$REPO_NAME/dispatches \
#           -H 'Accept: application/vnd.github.everest-preview+json' \
#           -u ${{ secrets.ACTIONS_KEY }} \
#           --data "{\"event_type\": \"$EVENT_TYPE\", \"client_payload\": {\"repository\": \"$GITHUB_REPOSITORY\"}}"
#         env:
#           REPO_OWNER: ${{ env.REPO_OWNER }}
#           REPO_NAME: ${{ env.REPO_NAME }}
#           EVENT_TYPE: ${{ env.EVENT_TYPE }}

#       - uses: actions/checkout@v3

######################################################## perfectly working###############
# name: workflow_01

# on:
#   workflow_dispatch:
#     inputs:
#       workflow_02:
#         description: 'Workflow 2 which will be triggered'
#         required: true
#         default: 'workflow_02'
#       workflow2_github_account:
#         description: 'GitHub Account Owner'
#         required: true
#         default: 'ashrafalih'
#       workflow2_repo_github:
#         description: 'repo-name'
#         required: true
#         default: 'Repo_B'
#   push:
#     branches:
#       - master

# jobs:
#   build:
#     runs-on: ubuntu-latest

    # steps:
    #   - name: Test
    #     run: |
    #       curl -X POST https://api.github.com/repos/ashrafalih/Repo_B/dispatches \
    #       -H 'Accept: application/vnd.github.everest-preview+json' \
    #       -u ${{ secrets.ACTIONS_KEY }} \
    #       --data '{"event_type": "Trigger Workflow", "client_payload": { "repository": "'"$GITHUB_REPOSITORY"'" }}'
    #   - uses: actions/checkout@v3

########################################################### below is working #
# name: Build and Publish # name of the workflow
# on:
#   push:
# jobs:
#   build-and-publish:
#     runs-on: ubuntu-latest
#     steps:
#       - name: Checkout Repo_A
#         uses: actions/checkout@v2
#       - name: Set up AWS CLI
#         run: |
#           mkdir -p ~/.aws
#           echo "[default]" > ~/.aws/config
#           echo "aws_access_key_id=${{ secrets.AWS_ACCESS_KEY_ID }}" >> ~/.aws/config
#           echo "aws_secret_access_key=${{ secrets.AWS_SECRET_ACCESS_KEY }}" >> ~/.aws/config
#           echo "region=us-east-1" >> ~/.aws/config

#       - name: Build and Publish Docker Image
#         env:
#           AWS_REGION: us-east-1  
#           AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
#           AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
#         run: |
#           aws ecr-public get-login-password --region us-east-1 | docker login --username AWS --password-stdin public.ecr.aws/f9x9k0v4
#           docker build -t test-package-mgmt-160-rc .
#           # Tag the Docker image
#           docker tag test-package-mgmt-160-rc:latest public.ecr.aws/f9x9k0v4/package-mgmt-repo:latest
#           # Push the Docker image to Amazon ECR
#           docker push public.ecr.aws/f9x9k0v4/package-mgmt-repo:latest
      
#       - name: Trigger Workflow in Repo B
#         uses: octokit/request-action@v2.x
#         with:
#           route: POST /repos/ashrafalih/Repo_B/actions/workflows/6945091148/dispatches
#           mediaType: '{"inputs": ["branch_name", "docker_image_tag"], "owner": "ashrafalih", "repo": "Repo_B", "workflow_id": "6945091148", "ref": "${{ github.event.after }}"}'
#         env:
#           GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
